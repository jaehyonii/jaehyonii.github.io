{"version":3,"file":"js/171.d98eb659.js","mappings":"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","sources":["webpack://frontend/./src/pages/main/MainPage.vue","webpack://frontend/./src/pages/main/MainPage.vue?1acf"],"sourcesContent":["<template>\r\n  <div class=\"main\">\r\n    <h1>추천 상품</h1>\r\n    <section class=\"product-grid\">\r\n      <!-- 상품이 있을 때 -->\r\n      <template v-if=\"posts.length > 0\">\r\n        <div\r\n          v-for=\"(product, index) in posts\"\r\n          :key=\"index\"\r\n          class=\"product-card\"\r\n          @click=\"redirectToRead(product.Ino)\"\r\n        >\r\n          <!-- 상품 이미지 -->\r\n          <div class=\"product-image\">\r\n            <img\r\n              v-if=\"product.Image\"\r\n              :src=\"`data:image/jpeg;base64,${product.Image}`\"\r\n              alt=\"상품 이미지\"\r\n            />\r\n            <div v-else class=\"no-image\">이미지 없음</div>\r\n          </div>\r\n\r\n          <!-- 상품 정보 -->\r\n          <div class=\"product-info\">\r\n            <h3>{{ product.Title }}</h3>\r\n            <p>가격: {{ product.Price }}원</p>\r\n            <p>찜: ❤ {{ product.Like_cnt }}</p>\r\n            <p>\r\n              [지역: {{ product.Place }} | 게시일: {{ formatDate(product.Reg_date) }} |\r\n              분류: {{ product.Group1 }}]\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </template>\r\n\r\n      <!-- 상품이 없을 때 -->\r\n      <div v-else class=\"no-posts\">\r\n        게시물이 없습니다.\r\n      </div>\r\n    </section>\r\n  </div>\r\n\r\n  <div class=\"search-container\">\r\n    <h1>내 주변의 판매 상품 보기</h1>\r\n    <input\r\n      type=\"text\"\r\n      v-model=\"searchQuery\"\r\n      placeholder=\"주소를 입력하세요\"\r\n      @keyup.enter=\"searchPlace\"\r\n    />\r\n    <button @click=\"searchPlace\">검색</button>\r\n  </div>\r\n  <div class=\"map-container\">\r\n    <div id=\"map\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nlet initLocation = null;\r\nlet X = 0, Y = 0;\r\n\r\nconst NAVER_CLIENT_CLOUD_ID = process.env.VUE_APP_NAVER_CLIENT_CLOUD_ID;\r\n\r\n// selint error 해결\r\n/* eslint-disable */\r\n\r\nexport default {\r\n  computed: {\r\n    // 현재 페이지에 맞는 상품 데이터 계산\r\n    posts() {\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      return Array.isArray(this.allPosts) ? this.allPosts.slice(start, end) : [];\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      /* 상품 보여주기 */\r\n      mainCategory: \"\",\r\n      subCategory: \"\",\r\n      priceFrom: null,\r\n      priceTo: null,\r\n      searchQuery: \"\",\r\n      sortOption: \"찜 많은 순\",\r\n      itemsPerPage: 6, // 한 페이지에 표시할 게시물 수\r\n      allPosts: [], // 전체 게시물 데이터를 저장\r\n      currentPage: 1, // 현재 페이지 번호\r\n\r\n      /* 지도 API */\r\n      searchQuery: '', // 검색어\r\n      map: null, // 지도 객체\r\n      markers: [], // 마커 객체 리스트\r\n    };\r\n  },\r\n  beforeMount() {\r\n    // 네이버 지도 스크립트를 렌더링 전에 로드합니다.\r\n    const script = document.createElement('script');\r\n    script.src = `https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=${NAVER_CLIENT_CLOUD_ID}`;\r\n    script.onload = this.initMap;\r\n    script.onerror = () => {\r\n      console.error('네이버 지도 스크립트 로드 실패');\r\n      alert('네이버 지도 스크립트 로드 중 문제가 발생했습니다.');\r\n    };\r\n    document.head.appendChild(script);\r\n  },\r\n  methods: {\r\n    /* 메인페이지 상품 보여주기 */\r\n    // 게시물 데이터를 백엔드에서 가져옴\r\n    async fetchPosts() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:3000/search\", {\r\n          params: {\r\n            mainCategory: this.mainCategory,\r\n            subCategory: this.subCategory,\r\n            priceFrom: this.priceFrom,\r\n            priceTo: this.priceTo,\r\n            searchQuery: this.searchQuery,\r\n            sortOption: this.sortOption,\r\n          },\r\n        });\r\n        console.log(\"Axios 응답 데이터:\", response.data);\r\n\r\n        if (Array.isArray(response.data)) {\r\n          this.allPosts = response.data.map(post => ({\r\n            ...post,\r\n            Reg_date: post.Reg_date, // 날짜 형식 변환이 필요할 경우 추가\r\n          }));\r\n        } else {\r\n          console.error(\"응답 데이터가 배열이 아닙니다.\");\r\n          this.allPosts = [];\r\n        }\r\n\r\n        this.currentPage = 1; // 새로운 데이터를 가져오면 첫 페이지로 초기화\r\n      } catch (error) {\r\n        console.error(\"게시물 데이터를 가져오는 중 오류 발생:\", error);\r\n        this.allPosts = []; // 실패 시 빈 배열로 초기화\r\n      }\r\n    },\r\n    // 클릭 시 상세 페이지로 이동\r\n    redirectToRead(ino) {\r\n      this.$router.push(`/read/${ino}`);\r\n    },\r\n    // 날짜 포맷팅\r\n    formatDate(dateString) {\r\n      const options = { year: \"numeric\", month: \"2-digit\", day: \"2-digit\" };\r\n      return new Date(dateString).toLocaleDateString(\"ko-KR\", options);\r\n    },\r\n    \r\n    /* 지도 API */\r\n    // 지도 초기화\r\n    async initMap() {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n\r\n        if (!token) {\r\n          X = 37.619897;\r\n          Y = 127.059542;\r\n          initLocation = { X, Y };\r\n        } else {\r\n          const decoded = jwtDecode(token);\r\n          console.log(decoded)\r\n\r\n          const userLocation = decoded.UserAddress;\r\n          console.log(userLocation);\r\n\r\n          const location = await axios.post('http://localhost:3000/map', {\r\n            query: userLocation\r\n          });\r\n\r\n          console.log(location);\r\n\r\n          const { x, y } = location.data.location[0];\r\n          initLocation = { X: parseFloat(y), Y: parseFloat(x) }; // x: 경도, y: 위도\r\n        }\r\n      } catch (error) {\r\n        console.error('위치 정보를 로드하는 중 오류 발생:', error.message);\r\n        // 기본 위치 설정 (광운대학교)\r\n        initLocation = { X: 37.619897, Y: 127.059542 };\r\n      }\r\n\r\n      if (typeof naver !== 'undefined') {\r\n        this.map = new naver.maps.Map('map', {\r\n          center: new naver.maps.LatLng(initLocation.X, initLocation.Y),\r\n          zoom: 16,\r\n        });\r\n\r\n        // 줌 레벨을 설정\r\n        this.map.setZoom(16);\r\n      } else {\r\n        console.error('네이버 지도 API 로드 실패');\r\n        alert('네이버 지도 API 로드 실패');\r\n      }\r\n\r\n      // 주소 데이터가 제대로 반환됬는지 확인\r\n      try {\r\n        const itemLocations = await axios.get('http://localhost:3000/map'); // 상품 거래 장소 정보 받아오기\r\n        console.log(itemLocations.data); // 응답 데이터를 확인\r\n\r\n        //  지도에 상품의 마커 추가\r\n        for (let location of itemLocations.data.location) {\r\n          try {\r\n            const { X, Y } = location; // 경도(x)와 위도(y) 정보 추출\r\n            const { Address } = location;\r\n            const { Ino, Title } = location;\r\n\r\n            // 각 마커에 대해 고유한 infoWindow 생성\r\n            const infoWindow = new naver.maps.InfoWindow({\r\n              content: `\r\n                <div>\r\n                  <strong>주소:</strong> ${Address}<br><strong>제목:</strong> ${Title}\r\n                </div>\r\n              `,\r\n              maxWidth: 300, // 최대 너비\r\n            });\r\n\r\n            // 마커를 지도에 추가\r\n            const marker = new naver.maps.Marker({\r\n              position: new naver.maps.LatLng(parseFloat(X), parseFloat(Y)),\r\n              map: this.map,\r\n            });\r\n\r\n            // 마커에 mouseover 이벤트 추가. 마커에 마우스를 올렸을 때 정보 창을 보여줍니다.\r\n            naver.maps.Event.addListener(marker, 'mouseover', () => {\r\n              infoWindow.open(this.map, marker); // infoWindow 표시\r\n            });\r\n\r\n            // 마커에 mouseout 이벤트 추가. 마우스가 마커에서 벗어나면 정보창을 닫을지 여부를 판단\r\n            naver.maps.Event.addListener(marker, 'mouseout', () => {\r\n              infoWindow.close(); // 정보창 닫기\r\n            });\r\n\r\n            // 마커에 click 이벤트 추가. 마커를 클릭했을 때 URL로 이동\r\n            naver.maps.Event.addListener(marker, 'click', () => {\r\n              infoWindow.close(); // 정보창 닫기\r\n              \r\n              // 이동할 URL 설정 (예: `Ino`를 사용하여 URL 생성)\r\n              const url = `http://localhost:8080/read/${Ino}`;\r\n              \r\n              // URL로 이동 (현재 창에서 이동)\r\n              window.location.href = url;\r\n            });\r\n\r\n            this.markers.push(marker); // 마커 목록에 추가\r\n          } catch (error) {\r\n            console.error(`마커 추가 실패: ${error.message}`);\r\n          }\r\n        }\r\n      } catch (error) {\r\n          if (error.response && error.response.status === 404) {\r\n              console.error('Error: Resource not found (404)');\r\n          } else {\r\n              console.error('Error:', error.message);\r\n          }\r\n\r\n          return;\r\n      }\r\n    },\r\n\r\n    // 장소 검색\r\n    async searchPlace() { \r\n      if (!localStorage.getItem('token')) {\r\n        // 토큰이 없으면 로그인 페이지로 리디렉션\r\n        if (confirm('로그인이 필요합니다. \\n로그인 페이지로 이동하시겠습니까?')) {\r\n          this.$router.push({ name: 'login' });  // '예' 선택 시 '/login'으로 이동\r\n          return;\r\n        } else {\r\n          this.$router.push({ name: 'main' });   // '아니오' 선택 시 '/main'으로 이동\r\n          return;\r\n        }\r\n      }\r\n      \r\n      if (!this.searchQuery.trim()) return alert('검색어를 입력하세요.');\r\n      console.log(this.searchQuery);\r\n\r\n      try {\r\n        const response = await axios.post('http://localhost:3000/map/search', {\r\n          query: this.searchQuery, // 검색어를 'query'라는 키로 서버에 전달\r\n        });\r\n\r\n        const places = response.data.items;\r\n\r\n        console.log(places);\r\n\r\n        if (places.length > 0) {\r\n          const firstPlace = places[0];\r\n\r\n          const latLng = new naver.maps.LatLng(\r\n            parseFloat(firstPlace.mapy) / 1e7, // 위도 (mapy)\r\n            parseFloat(firstPlace.mapx) / 1e7  // 경도 (mapx)\r\n          );\r\n          \r\n          // 지도 중심을 검색 장소로 이동\r\n          this.map.setCenter(latLng);\r\n          // 줌 레벨을 설정\r\n          this.map.setZoom(16);\r\n        }\r\n      } catch (error) {\r\n        console.error('장소 검색 실패:', error.message);\r\n        alert('검색 중 문제가 발생했습니다.');\r\n      }\r\n    },\r\n\r\n    // 마커 제거\r\n    clearMarkers() {\r\n      this.markers.forEach((marker) => marker.setMap(null));\r\n      this.markers = [];\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchPosts();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.product-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr); /* 3개의 동일한 크기의 컬럼 */\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n  width: 65%; /* 전체 너비 사용 */\r\n  max-width: 1024px; /* 최대 너비 제한 */\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\n.product-card {\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  background-color: #fff;\r\n  width: 100%;\r\n  min-width: 0; /* 그리드 아이템 오버플로우 방지 */\r\n  transition: border-color 0.3s ease;\r\n}\r\n\r\n.product-card:hover {\r\n  background-color: #42b983;\r\n  border-color: #42b983;\r\n  transition: 0.5s;\r\n}\r\n\r\n.product-image {\r\n  width: 100%;\r\n  aspect-ratio: 1; /* 정사각형 비율 유지 */\r\n  overflow: hidden;\r\n}\r\n\r\n.product-image img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover; /* 이미지 비율 유지하며 컨테이너 채우기 */\r\n  display: block;\r\n}\r\n\r\n.product-info {\r\n  margin-top: 10px;\r\n}\r\n\r\n.product-info h3 {\r\n  margin: 0 0 8px 0;\r\n  font-size: 1rem;\r\n  line-height: 1.4;\r\n}\r\n\r\n.product-info p {\r\n  margin: 4px 0;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.no-posts {\r\n  text-align: center;\r\n  color: #666;\r\n}\r\n\r\n.search-container {\r\n  text-align: center; /* 검색 입력창을 중앙 정렬 */\r\n  margin-top: 50px;\r\n  margin-bottom: 5px; /* 검색창과 지도 사이 간격 */\r\n}\r\n\r\ninput[type=\"text\"] {\r\n  width: 300px; /* 너비 설정 */\r\n  height: 50px; /* 높이 설정 */\r\n  padding: 10px; /* 안쪽 여백 */\r\n  font-size: 18px; /* 글자 크기 */\r\n  border: 2px solid #ccc; /* 테두리 */\r\n  border-radius: 5px; /* 모서리 둥글게 */\r\n  box-sizing: border-box; /* 패딩 포함 크기 */\r\n}\r\n\r\nbutton {\r\n  height: 50px; /* 버튼 높이 */\r\n  margin-left: 10px;\r\n  padding: 0 20px; /* 좌우 여백 */\r\n  font-size: 18px; /* 글자 크기 */\r\n  font-weight: bold; /* 글자 두께 */\r\n  background-color: #42b983; /* 배경색 */\r\n  color: #fff; /* 글자색 */\r\n  border: none; /* 테두리 제거 */\r\n  border-radius: 5px; /* 모서리 둥글게 */\r\n  cursor: pointer; /* 클릭 가능 표시 */\r\n}\r\n\r\n.map-container {\r\n  display: flex;\r\n  justify-content: center;  /* 수평 가운데 정렬 */\r\n  align-items: center;      /* 수직 가운데 정렬 */\r\n  height: 450px;            /* 화면 전체 높이 사용 */\r\n}\r\n\r\n#map {\r\n  width: 65%; /* 맵의 너비 65% */\r\n  height: 400px; /* 맵의 높이 400px */\r\n}\r\n</style>","import { render } from \"./MainPage.vue?vue&type=template&id=1434bde1&scoped=true\"\nimport script from \"./MainPage.vue?vue&type=script&lang=js\"\nexport * from \"./MainPage.vue?vue&type=script&lang=js\"\n\nimport \"./MainPage.vue?vue&type=style&index=0&id=1434bde1&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1434bde1\"]])\n\nexport default __exports__"],"names":["class","key","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_hoisted_2","$options","posts","length","_renderList","product","index","onClick","$event","redirectToRead","Ino","_hoisted_4","Image","src","alt","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","Title","Price","Like_cnt","Place","formatDate","Reg_date","Group1","_hoisted_3","_hoisted_8","_hoisted_9","type","_cache","$data","searchQuery","placeholder","onKeyup","_withKeys","args","searchPlace","id","initLocation","X","Y","NAVER_CLIENT_CLOUD_ID","process","computed","start","this","currentPage","itemsPerPage","end","Array","isArray","allPosts","slice","data","mainCategory","subCategory","priceFrom","priceTo","sortOption","map","markers","beforeMount","script","document","createElement","onload","initMap","onerror","console","error","alert","head","appendChild","methods","fetchPosts","response","axios","get","params","log","post","ino","$router","push","dateString","options","year","month","day","Date","toLocaleDateString","token","localStorage","getItem","decoded","jwtDecode","userLocation","UserAddress","location","query","x","y","parseFloat","message","naver","maps","Map","center","LatLng","zoom","setZoom","itemLocations","Address","infoWindow","InfoWindow","content","maxWidth","marker","Marker","position","Event","addListener","open","close","url","window","href","status","confirm","name","trim","places","items","firstPlace","latLng","mapy","mapx","setCenter","clearMarkers","forEach","setMap","mounted","__exports__","render"],"sourceRoot":""}