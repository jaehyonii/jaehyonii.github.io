{"version":3,"file":"js/58.b841644f.js","mappings":"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","sources":["webpack://frontend/./src/pages/search/SearchPage.vue","webpack://frontend/./src/pages/search/SearchPage.vue?9535"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <main>\r\n      <!-- 검색 및 정렬 필터 -->\r\n      <section class=\"center-search\">\r\n        <h1 class=\"search-title\">검색 필터</h1>\r\n        <div class=\"filter-container\">\r\n          <div class=\"row\">\r\n            <div class=\"input-group\">\r\n              <label for=\"main-category\">대분류:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"main-category\"\r\n                v-model=\"mainCategory\"\r\n                placeholder=\"대분류 입력\"\r\n              />\r\n            </div>\r\n            <div class=\"input-group\">\r\n              <label for=\"sub-category\">소분류:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"sub-category\"\r\n                v-model=\"subCategory\"\r\n                placeholder=\"소분류 입력\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"input-group keyword-group\">\r\n              <label for=\"search-query\">제목 키워드:</label>\r\n              <div class=\"search-bar\">\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"search-query\"\r\n                  v-model=\"searchQuery\"\r\n                  placeholder=\"검색할 상품 제목 입력\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div class=\"input-group price-group\">\r\n              <label for=\"price-range\">가격:</label>\r\n              <div class=\"price-inputs\">\r\n                <input\r\n                  type=\"number\"\r\n                  v-model.number=\"priceFrom\"\r\n                  placeholder=\"최소 가격\"\r\n                />\r\n                ~\r\n                <input\r\n                  type=\"number\"\r\n                  v-model.number=\"priceTo\"\r\n                  placeholder=\"최대 가격\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 검색 버튼 -->\r\n        <div class=\"center-button\">\r\n          <button class=\"search-button\" @click=\"fetchPosts\">검색</button>\r\n        </div>\r\n\r\n        <div class=\"filter-buttons\">\r\n          <button @click=\"setSortOption('찜 많은 순')\">찜 많은 순</button>\r\n          <button @click=\"setSortOption('가격 순')\">가격 순</button>\r\n          <button @click=\"setSortOption('최신 순')\">최신 순</button>\r\n        </div>\r\n      </section>\r\n\r\n      <!-- 게시물 목록 -->\r\n      <section class=\"product-grid\">\r\n        <template v-if=\"posts.length > 0\">\r\n          <div\r\n            v-for=\"(product, index) in posts\"\r\n            :key=\"index\"\r\n            class=\"product-card\"\r\n            @click=\"redirectToRead(product.Ino)\"\r\n          >\r\n            <div class=\"product-image\">\r\n              <img\r\n                v-if=\"product.Image\"\r\n                :src=\"`data:image/jpeg;base64,${product.Image}`\"\r\n                alt=\"상품 이미지\"\r\n              />\r\n              <div v-else class=\"no-image\">이미지 없음</div>\r\n            </div>\r\n            <div class=\"product-info\">\r\n              <h3>{{ product.Title }}</h3>\r\n              <p>가격: {{ product.Price }}원</p>\r\n              <p>찜: ❤ {{ product.Like_cnt }}</p>\r\n              <p>\r\n                [지역: {{ product.Place }} | 게시일: {{ formatDate(product.Reg_date) }} |\r\n                분류: {{ product.Group1 }}]\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </template>\r\n        <div v-else class=\"no-posts\">\r\n          게시물이 없습니다.\r\n        </div>\r\n      </section>\r\n\r\n      <!-- 페이지네이션 -->\r\n      <section class=\"pagination\">\r\n        <button @click=\"changePage(currentPage - 1)\" :disabled=\"currentPage === 1\">\r\n          이전\r\n        </button>\r\n        <span>페이지 {{ currentPage }} / {{ totalPages }}</span>\r\n        <button\r\n          @click=\"changePage(currentPage + 1)\"\r\n          :disabled=\"currentPage === totalPages\"\r\n        >\r\n          다음\r\n        </button>\r\n      </section>\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      mainCategory: \"\",\r\n      subCategory: \"\",\r\n      priceFrom: null,\r\n      priceTo: null,\r\n      searchQuery: \"\",\r\n      sortOption: \"최신 순\",\r\n      itemsPerPage: 9, // 한 페이지에 표시할 게시물 수\r\n      allPosts: [], // 전체 게시물 데이터를 저장\r\n      currentPage: 1, // 현재 페이지 번호\r\n    };\r\n  },\r\n  computed: {\r\n    posts() {\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      return Array.isArray(this.allPosts) ? this.allPosts.slice(start, end) : [];\r\n    },\r\n    totalPages() {\r\n      return Math.ceil(this.allPosts.length / this.itemsPerPage);\r\n    },\r\n  },\r\n  methods: {\r\n    // 게시물 데이터를 백엔드에서 가져옴\r\n    async fetchPosts() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:3000/search\", {\r\n          params: {\r\n            mainCategory: this.mainCategory,\r\n            subCategory: this.subCategory,\r\n            priceFrom: this.priceFrom,\r\n            priceTo: this.priceTo,\r\n            searchQuery: this.searchQuery,\r\n            sortOption: this.sortOption,\r\n          },\r\n        });\r\n        console.log(\"Axios 응답 데이터:\", response.data);\r\n\r\n        if (Array.isArray(response.data)) {\r\n          this.allPosts = response.data.map(post => ({\r\n            ...post,\r\n            Reg_date: post.Reg_date, // 날짜 형식 변환이 필요할 경우 추가\r\n          }));\r\n        } else {\r\n          console.error(\"응답 데이터가 배열이 아닙니다.\");\r\n          this.allPosts = [];\r\n        }\r\n\r\n        this.currentPage = 1; // 새로운 데이터를 가져오면 첫 페이지로 초기화\r\n      } catch (error) {\r\n        console.error(\"게시물 데이터를 가져오는 중 오류 발생:\", error);\r\n        this.allPosts = []; // 실패 시 빈 배열로 초기화\r\n      }\r\n    },\r\n\r\n    setSortOption(option) {\r\n      this.sortOption = option;\r\n      this.fetchPosts();\r\n    },\r\n\r\n    changePage(page) {\r\n      if (page > 0 && page <= this.totalPages) {\r\n        this.currentPage = page;\r\n      }\r\n    },\r\n\r\n    redirectToRead(ino) {\r\n      this.$router.push(`/read/${ino}`);\r\n    },\r\n\r\n    formatDate(dateString) {\r\n      const options = { year: \"numeric\", month: \"2-digit\", day: \"2-digit\" };\r\n      return new Date(dateString).toLocaleDateString(\"ko-KR\", options);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchPosts();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n#app {\r\n  font-family: Arial, sans-serif;\r\n  max-width: 1024px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n}\r\n\r\nmain {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n}\r\n\r\n.center-search {\r\n  width: 1000px;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 10px;\r\n  background-color: #f9f9f9;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 30px;\r\n}\r\n\r\n.search-title {\r\n  font-size: 36px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-container {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 30px; /* 섹션 간 간격 */\r\n}\r\n\r\n.row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start; /* 위쪽 정렬 */\r\n  width: 100%;\r\n  gap: 50px; /* 대분류와 소분류 사이 간격 */\r\n}\r\n\r\n.input-group {\r\n  flex: 1; /* 균등한 공간 배분 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.input-group label {\r\n  font-weight: bold;\r\n  text-align: center;\r\n}\r\n\r\n.input-group input {\r\n  padding: 8px;\r\n  font-size: 14px;\r\n  width: 100%;\r\n}\r\n\r\n.keyword-group {\r\n  flex: 2;\r\n}\r\n\r\n.price-group {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.price-inputs {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.price-inputs input {\r\n  width: calc(50% - 10px); /* 입력창 50% 크기 조정 */\r\n  padding: 8px;\r\n  font-size: 14px;\r\n}\r\n\r\n.center-button {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.search-button {\r\n  width: 500px; /* 버튼 너비를 가로로 길게 설정 */\r\n  height: 30%; /* 버튼 높이를 얇게 설정 */\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  background-color: #d3d3d3; /* 기본 회색 */\r\n  color: #000; /* 기본 검은색 텍스트 */\r\n  border: 2px solid #000; /* 검정색 테두리 */\r\n  border-radius: 0; /* 모서리를 둥글게 하지 않음 */\r\n  cursor: pointer;\r\n  transition: background-color 0.3s, color 0.3s;\r\n}\r\n\r\n.search-button:hover {\r\n  background-color: #42b983; /* 민트색 */\r\n  color: #fff; /* 호버 시 흰색 텍스트 */\r\n}\r\n\r\n.filter-buttons {\r\n  align-self: flex-end;\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.filter-buttons button {\r\n  padding: 10px 20px;\r\n  font-size: 14px;\r\n  border: 1px solid #ccc;\r\n  background-color: #f8f8f8;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n}\r\n\r\n.filter-buttons button:hover {\r\n  background-color: #42b983;\r\n  color: #fff;\r\n  border-color: #42b983;\r\n  transition: 0.5s;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .center-search {\r\n    width: 90%;\r\n  }\r\n\r\n  .row {\r\n    flex-direction: column;\r\n    gap: 20px;\r\n  }\r\n\r\n  .price-inputs {\r\n    flex-direction: column;\r\n    gap: 10px;\r\n  }\r\n}\r\n\r\n\r\n.product-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr); /* 3개의 동일한 크기의 컬럼 */\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n  width: 100%; /* 전체 너비 사용 */\r\n  max-width: 1024px; /* 최대 너비 제한 */\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\n.product-card {\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  background-color: #fff;\r\n  width: 100%; /* 그리드 셀 너비에 맞춤 */\r\n  min-width: 0; /* 그리드 아이템 오버플로우 방지 */\r\n  transition: border-color 0.3s ease; /* 부드러운 애니메이션 효과 */\r\n}\r\n\r\n.product-card:hover {\r\n  background-color: #42b983;\r\n  border-color: #42b983; /* 마우스를 올렸을 때 테두리 색 변경 */\r\n  transition: 0.5s;\r\n}\r\n\r\n.product-image {\r\n  width: 100%;\r\n  aspect-ratio: 1; /* 정사각형 비율 유지 */\r\n  overflow: hidden; /* 이미지 넘침 방지 */\r\n}\r\n\r\n.product-image img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover; /* 이미지 비율 유지하며 컨테이너 채우기 */\r\n  display: block;\r\n}\r\n\r\n.product-info {\r\n  margin-top: 10px;\r\n}\r\n\r\n.product-info h3 {\r\n  margin: 0 0 8px 0;\r\n  font-size: 1rem;\r\n  line-height: 1.4;\r\n}\r\n\r\n.product-info p {\r\n  margin: 4px 0;\r\n  font-size: 0.9rem;\r\n}\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n  gap: 10px;\r\n}\r\n\r\n.pagination button {\r\n  padding: 5px 15px;\r\n  border: 1px solid #ccc;\r\n  background-color: #f8f8f8;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n}\r\n\r\n.pagination button:disabled {\r\n  background-color: #ddd;\r\n  cursor: not-allowed;\r\n}\r\n</style>","import { render } from \"./SearchPage.vue?vue&type=template&id=41f7428f&scoped=true\"\nimport script from \"./SearchPage.vue?vue&type=script&lang=js\"\nexport * from \"./SearchPage.vue?vue&type=script&lang=js\"\n\nimport \"./SearchPage.vue?vue&type=style&index=0&id=41f7428f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-41f7428f\"]])\n\nexport default __exports__"],"names":["id","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","for","type","_cache","$event","$data","mainCategory","placeholder","_hoisted_6","subCategory","_hoisted_7","_hoisted_8","_hoisted_9","searchQuery","_hoisted_10","_hoisted_11","priceFrom","number","_createTextVNode","priceTo","_hoisted_12","onClick","args","$options","fetchPosts","_hoisted_13","setSortOption","_hoisted_14","posts","length","_Fragment","_renderList","product","index","redirectToRead","Ino","_hoisted_16","Image","src","alt","_hoisted_17","_hoisted_18","_hoisted_19","_toDisplayString","Title","Price","Like_cnt","Place","formatDate","Reg_date","Group1","_hoisted_15","_hoisted_20","_hoisted_21","changePage","currentPage","disabled","_hoisted_22","totalPages","_hoisted_23","data","sortOption","itemsPerPage","allPosts","computed","start","this","end","Array","isArray","slice","Math","ceil","methods","response","axios","get","params","console","log","map","post","error","option","page","ino","$router","push","dateString","options","year","month","day","Date","toLocaleDateString","mounted","__exports__","render"],"sourceRoot":""}